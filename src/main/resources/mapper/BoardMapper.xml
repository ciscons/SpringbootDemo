<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 패키지명을 포함한 인터페이스명 -->
<mapper namespace="com.simple.basic.service.board.BoardMapper">

	<!-- id에는 사용하고자 하는 추상 메소드의 이름이 들어간다. -->
	<!-- select tag만의 특징은 result type이라는 속성으로 결과를 어디다가 mapping 시켜서 가져갈 것인지 적어줘야 한다.(get과 set은 해당되지 않는다.) -->	
	<!-- <select id="getTime" resultType="string"> 
		select now()
	</select> -->
	
<!-- 	<insert id="insert">
		insert into board(writer, title, content)
		values(#{xc.writer})
	</insert> -->
	
	<!-- 단일 값, VO 값, map의 key 값은 바로 사용할 수 있다. (ex. 변수명.으로 접근하지 않아도 됨 -->
	<insert id="insert">
		insert into board(writer, title, content)
		values(#{writer}, #{title}, #{content})
	</insert>
	
	<!-- resultType에는 하나의 행에 대한 처리를 작성해야 함 -->
	<!-- 아래와 같이 단축명(VO의 클래스 명)으로 사용할 수도 있다. 다른 어딘가에는 전체 페키지 명이 선언되어 있을 것이다. -->
<!-- <select id="getList" resultType="com.simple.basic.command.BoardVO"> --> 
	<select id="getList" resultType="BoardVO"> 
		SELECT * FROM board ORDER BY bno DESC 
	</select>
	
	<!-- serviceImpl에서 넘어온 parmeter 값이 단일 값이면 그냥 #{} 안에 써도 된다. -->
	<select id="getDetail" resultType="BoardVO">
		SELECT * FROM board WHERE bno = #{bno} 
	</select>
	
	<delete id="delete">
		DELETE FROM board WHERE bno = #{bno}
	</delete>
	
</mapper>